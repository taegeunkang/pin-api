# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
#     - name: git clone 
#       uses: actions/checkout@v3
      
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
        
#     - name: Run chmod to make gradlew executable
#       run: chmod +x ./gradlew

        
#     - name: Build with Gradle
#       uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#       with:
#         arguments: build
      
#     - name: rename jar and move
#       run: |
#         mkdir deploy
#         cp build/libs/*.jar deploy/application.jar
#         ls -al deploy
        
#     - name: deploy build to server
#       env: 
#         HOST : ${{secrets.HOST}}
#         USERNAME : ${{secrets.USERNAME}}
#         PASSWORD : ${{secrets.PASSWORD}}
#       uses: appleboy/scp-action@master
#       with:
#         username: $USERNAME
#         host: $HOST
#         password: $PASSWORD
#         source: "deploy/application.jar"
#         target: "/root/trep"

    - name: echo
      env: 
        HOST : ${{secrets.HOST}}
        USERNAME : ${{secrets.USERNAME}}
        PASSWORD : ${{secrets.PASSWORD}}
      run: |
        echo $HOST
        echo $USERNAME
        echo $PASSWORD
        
    - name: deploy server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USERNAME}}
        password: ${{secrets.PASSWORD}}
        script: | 
          cd /mnt/trep-api
          git pull
          docker-compose down
          docker-compose up -d --build
          

          
          
        
